{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/auth';\nexport const register = user => {\n  return axios.post(`${API_URL}/register`, user);\n};\nexport const login = user => {\n  return axios.post(`${API_URL}/login`, user);\n};\nexport const getUserProfile = async token => {\n  try {\n    const response = await axios.get('http://localhost:5000/users/me', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","register","user","post","login","getUserProfile","token","response","get","headers","Authorization","data","error"],"sources":["/home/surya/Desktop/FullStack-Projects/rent-it/client/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5000/auth';\n\nexport const register = (user) => {\n    return axios.post(`${API_URL}/register`, user);\n};\n\nexport const login = (user) => {\n    return axios.post(`${API_URL}/login`, user);\n};\n\nexport const getUserProfile = async (token) => {\n    try {\n        const response = await axios.get('http://localhost:5000/users/me', {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        return response.data;\n    } catch (error) {\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,4BAA4B;AAE5C,OAAO,MAAMC,QAAQ,GAAIC,IAAI,IAAK;EAC9B,OAAOH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,WAAW,EAAEE,IAAI,CAAC;AAClD,CAAC;AAED,OAAO,MAAME,KAAK,GAAIF,IAAI,IAAK;EAC3B,OAAOH,KAAK,CAACI,IAAI,CAAC,GAAGH,OAAO,QAAQ,EAAEE,IAAI,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC3C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,EAAE;MAC/DC,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUJ,KAAK;MAClC;IACJ,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}